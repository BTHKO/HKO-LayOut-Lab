const SHEETS = {
  MAIN: "HKO LayOut Lab Tracker" // Must match your sheet tab name exactly
};

const COL = {
  ID: 8 // Column number where the unique ID is stored (H = 8)
};

function syncSharedSpaceFromGitHub() {
  const RAW_URL = "https://raw.githubusercontent.com/BTHKO/HKO-LayOut-Lab/main/manifest.json";
  const ss = SpreadsheetApp.getActive();
  const sh = ss.getSheetByName(SHEETS.MAIN);
  const r = UrlFetchApp.fetch(RAW_URL, { muteHttpExceptions: true });

  if (r.getResponseCode() !== 200) {
    ss.toast("manifest.json not found");
    return;
  }

  const data = JSON.parse(r.getContentText());
  if (!Array.isArray(data.sections)) {
    ss.toast("Bad manifest");
    return;
  }

  const last = sh.getLastRow();
  const rows = last > 1 ? sh.getRange(2, 1, last - 1, sh.getLastColumn()).getValues() : [];
  const byId = new Map(rows.map(r => [String(r[COL.ID - 1] || ""), true]));
  const urlBase = "https://bthko.github.io/HKO-LayOut-Lab/";

  const adds = [];
  data.sections.forEach(sec => {
    const id = sec.id || "";
    if (!id) return;
    const mod = Utilities.formatDate(new Date(sec.updatedAt || new Date()), Session.getScriptTimeZone(), "yyyy-MM-dd HH:mm");
    if (!byId.has(id)) {
      adds.push([
        sec.title || "Untitled", 
        urlBase + "#" + id, 
        mod, 
        "", 
        sec.status || "Pending", 
        "", 
        "Shared Space", 
        id,
        "", 
        ((sec.tags || []).length ? `[${sec.tags.join(", ")}] ` : "") + (sec.status ? `Status: ${sec.status}` : ""),
        "Shared Space", 
        "", 
        "", 
        "", 
        mod
      ]);
    }
  });

  if (adds.length) {
    sh.getRange(sh.getLastRow() + 1, 1, adds.length, adds[0].length).setValues(adds);
  }

  ss.toast("Shared Space synced.");
}
